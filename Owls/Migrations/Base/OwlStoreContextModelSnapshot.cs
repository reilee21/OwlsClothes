// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Owls.Models;

#nullable disable

namespace Owls.Migrations.Base
{
    [DbContext(typeof(OwlStoreContext))]
    partial class OwlStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Owls.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCate")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Owls.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"), 1L, 1);

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorId");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("Owls.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ShippingFee")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SubTotal")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Owls.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"), 1L, 1);

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("Sku");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Owls.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagethumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Owls.Models.ProductImage", b =>
                {
                    b.Property<int>("ImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImgId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ImgId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Owls.Models.ProductVariant", b =>
                {
                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<double?>("SalePrice")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sku");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariants");
                });

            modelBuilder.Entity("Owls.Models.ShippingFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fee")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShippingFees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Thành phố Hà Nội",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 2,
                            City = "Tỉnh Hà Giang",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 3,
                            City = "Tỉnh Cao Bằng",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 4,
                            City = "Tỉnh Bắc Kạn",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 5,
                            City = "Tỉnh Tuyên Quang",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 6,
                            City = "Tỉnh Lào Cai",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 7,
                            City = "Tỉnh Điện Biên",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 8,
                            City = "Tỉnh Lai Châu",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 9,
                            City = "Tỉnh Sơn La",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 10,
                            City = "Tỉnh Yên Bái",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 11,
                            City = "Tỉnh Hoà Bình",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 12,
                            City = "Tỉnh Thái Nguyên",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 13,
                            City = "Tỉnh Lạng Sơn",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 14,
                            City = "Tỉnh Quảng Ninh",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 15,
                            City = "Tỉnh Bắc Giang",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 16,
                            City = "Tỉnh Phú Thọ",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 17,
                            City = "Tỉnh Vĩnh Phúc",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 18,
                            City = "Tỉnh Bắc Ninh",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 19,
                            City = "Tỉnh Hải Dương",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 20,
                            City = "Thành phố Hải Phòng",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 21,
                            City = "Tỉnh Hưng Yên",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 22,
                            City = "Tỉnh Thái Bình",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 23,
                            City = "Tỉnh Hà Nam",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 24,
                            City = "Tỉnh Nam Định",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 25,
                            City = "Tỉnh Ninh Bình",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 26,
                            City = "Tỉnh Thanh Hóa",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 27,
                            City = "Tỉnh Nghệ An",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 28,
                            City = "Tỉnh Hà Tĩnh",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 29,
                            City = "Tỉnh Quảng Bình",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 30,
                            City = "Tỉnh Quảng Trị",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 31,
                            City = "Tỉnh Thừa Thiên Huế",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 32,
                            City = "Thành phố Đà Nẵng",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 33,
                            City = "Tỉnh Quảng Nam",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 34,
                            City = "Tỉnh Quảng Ngãi",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 35,
                            City = "Tỉnh Bình Định",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 36,
                            City = "Tỉnh Phú Yên",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 37,
                            City = "Tỉnh Khánh Hòa",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 38,
                            City = "Tỉnh Ninh Thuận",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 39,
                            City = "Tỉnh Bình Thuận",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 40,
                            City = "Tỉnh Kon Tum",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 41,
                            City = "Tỉnh Gia Lai",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 42,
                            City = "Tỉnh Đắk Lắk",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 43,
                            City = "Tỉnh Đắk Nông",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 44,
                            City = "Tỉnh Lâm Đồng",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 45,
                            City = "Tỉnh Bình Phước",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 46,
                            City = "Tỉnh Tây Ninh",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 47,
                            City = "Tỉnh Bình Dương",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 48,
                            City = "Tỉnh Đồng Nai",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 49,
                            City = "Tỉnh Bà Rịa - Vũng Tàu",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 50,
                            City = "Thành phố Hồ Chí Minh",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 51,
                            City = "Tỉnh Long An",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 52,
                            City = "Tỉnh Tiền Giang",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 53,
                            City = "Tỉnh Bến Tre",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 54,
                            City = "Tỉnh Trà Vinh",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 55,
                            City = "Tỉnh Vĩnh Long",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 56,
                            City = "Tỉnh Đồng Tháp",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 57,
                            City = "Tỉnh An Giang",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 58,
                            City = "Tỉnh Kiên Giang",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 59,
                            City = "Thành phố Cần Thơ",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 60,
                            City = "Tỉnh Hậu Giang",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 61,
                            City = "Tỉnh Sóc Trăng",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 62,
                            City = "Tỉnh Bạc Liêu",
                            Fee = 20000
                        },
                        new
                        {
                            Id = 63,
                            City = "Tỉnh Cà Mau",
                            Fee = 20000
                        });
                });

            modelBuilder.Entity("Owls.Models.OrderDetail", b =>
                {
                    b.HasOne("Owls.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Owls.Models.ProductVariant", "ProductVariant")
                        .WithMany("OrderDetails")
                        .HasForeignKey("Sku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("Owls.Models.Product", b =>
                {
                    b.HasOne("Owls.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Owls.Models.ProductImage", b =>
                {
                    b.HasOne("Owls.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Owls.Models.ProductVariant", b =>
                {
                    b.HasOne("Owls.Models.Color", "Color")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ColorId");

                    b.HasOne("Owls.Models.Product", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductId");

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Owls.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Owls.Models.Color", b =>
                {
                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("Owls.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Owls.Models.Product", b =>
                {
                    b.Navigation("ProductImages");

                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("Owls.Models.ProductVariant", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
